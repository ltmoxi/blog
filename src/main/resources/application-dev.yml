logging:
  config: classpath:config/logback.xml
server:
  tomcat:
    uri-encoding: UTF-8
  port: 8080
  servlet:
    context-path: /gbq_blog
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall #stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.73
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        #          login-username: admin
        # 登录密码
  #          login-password: admin
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  thymeleaf:
    mode: HTML5
    encoding: UTF-8
    prefix: file:src/main/resources/templates/
    cache: false
  data:
    elasticsearch:
      cluster-name: my-application
      cluster-nodes: 127.0.0.1:9300 #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode
      properties:
        path:
          logs: ./elasticsearch/log #elasticsearch日志存储目录
          data: ./elasticsearch/data #elasticsearch数据存储目录
  elasticsearch:
    rest:
      uris: [ "127.0.0.1:9200" ]
  mail:
    host: smtp.qq.com
    username: 643967159@qq.com  #发送方的邮箱,
    password: bjjfftokwvnpbfch #授权码
    port: 465
    properties.mail.smtp.ssl.enable: true


#fdfsDfs:
#  resHost: 127.0.0.1:8001
#mybatis:
#  mapper-locations: classpath:mapper/*Mapper.xml
##  type-aliases-package: com.gbq.boot.dao.bean

mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
    #  type-aliases-package: com.gbq.boot.bean
    #    configuration:
  # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
  #      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #      global-config:
  # 逻辑删除配置
  #        logic-delete-value: 0
  #        logic-not-delete-value: 1
  #        field-strategy: 2
  #    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  #  configuration:
  #    #延时加载
  #    lazy-loading-enabled: true
  #    map-underscore-to-camel-case: true
  #    use-column-label: true

#acHeadPath: D:\workOffice\nginx-1.17.0\html\images\achead\
#acBodyPath: D:\workOffice\nginx-1.17.0\html\images\acbody\

windowsPath: .
#linuxPath:
